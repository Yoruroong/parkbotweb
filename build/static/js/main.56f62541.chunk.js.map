{"version":3,"sources":["Components/Privacy.jsx","Components/Tos.jsx","Components/Main.jsx","Components/Introducing.jsx","Components/Information.jsx","Components/Docs.jsx","Components/Footer.jsx","Components/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Docs","props","renderAll","a","fetch","then","r","json","res","console","log","setState","data","state","Rendered","this","className","Modal","Dialog","style","minWidth","Header","Title","Body","markdown","options","tables","emoji","Footer","Button","variant","onClick","window","location","href","React","Component","withRouter","MyVerticallyCenteredModal","size","aria-labelledby","backdrop","centered","closeButton","id","to","detailView","document","getElementById","scrollIntoView","behavior","block","inline","Main","useState","modalShow","setModalShow","show","onHide","useStyles","makeStyles","root","maxWidth","media","height","StyledButton","withStyles","background","borderRadius","border","color","padding","boxShadow","label","textTransform","goto","classes","Card","width","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","component","marginTop","Introducing","status","guilds","users","fontSize","role","aria-label","Text","Img","match","params","name","docs","FooterPage","fluid","md","Date","getFullYear","search","value","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Divider","Form","FormControl","type","placeholder","NotFound","path","Privacy","Tos","exact","Information","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.56f62541.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\"\nimport { Modal, Button } from 'react-bootstrap'\nimport MarkdownView from 'react-showdown'\n\nclass Docs extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            Rendered: false,\n        }\n    }\n  \n    componentDidMount() {\n        this.renderAll()\n    }\n  \n    renderAll = async() => {\n        // let guildId = window.location.href.replace(/[^0-9]/g,'').replace(3000, \"\")\n        try {\n            let res = await fetch(`https://api.parkbot.ml/tos-and-privacy/privacy`).then(r => r.json())\n            console.log(res)\n            this.setState({\n                data: res.data\n            })\n        } catch (err) {\n            console.log(err)\n        }   \n    }\n  \n    render() {\n        return (\n            <div className=\"App-docs\">\n                <Modal.Dialog style={{ minWidth: '70vw' }}>\n                    <Modal.Header>\n                        <Modal.Title>파크봇의 개인정보 처리방침</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <MarkdownView\n                            markdown={this.state.data}\n                            options={{ tables: true, emoji: true }}\n                        />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => window.location.href=\"/\"}>파크봇 초대하기</Button>\n                    </Modal.Footer>\n                </Modal.Dialog>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Docs);","import React from 'react';\nimport { withRouter } from \"react-router-dom\"\nimport { Modal, Button } from 'react-bootstrap'\nimport MarkdownView from 'react-showdown'\n\nclass Docs extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            Rendered: false,\n        }\n    }\n  \n    componentDidMount() {\n        this.renderAll()\n    }\n  \n    renderAll = async() => {\n        // let guildId = window.location.href.replace(/[^0-9]/g,'').replace(3000, \"\")\n        try {\n            let res = await fetch(`https://api.parkbot.ml/tos-and-privacy/tos`).then(r => r.json())\n            console.log(res)\n            this.setState({\n                data: res.data\n            })\n        } catch (err) {\n            console.log(err)\n        }   \n    }\n  \n    render() {\n        return (\n            <div className=\"App-docs\">\n                <Modal.Dialog style={{ minWidth: '70vw' }}>\n                    <Modal.Header>\n                        <Modal.Title>파크봇의 이용약관</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <MarkdownView\n                            markdown={this.state.data}\n                            options={{ tables: true, emoji: true }}\n                        />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => window.location.href=\"/\"}>파크봇 초대하기</Button>\n                    </Modal.Footer>\n                </Modal.Dialog>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Docs);","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ScrollDownIndicator\r\n} from 'react-landing-page'\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n    const redirect = () => {\r\n      window.location.href = 'https://discord.com/oauth2/authorize?client_id=530171799980212244&permissions=8&scope=bot'\r\n    }\r\n    \r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        backdrop=\"static\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            이용약관, 개인정보 처리방침\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          \r\n          <p>\r\n            <Link to=\"/tos\">이용약관</Link>\r\n            <br />\r\n            <Link to=\"/privacy\">개인정보 처리방침</Link>\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={redirect}>나는 위의 약관들을 주의 깊게 읽어 보았고, 동의합니다.</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nfunction detailView() {\r\n    document.getElementById(\"intro\").scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\r\n}\r\n\r\n/*\r\nfunction getT() {\r\n    let t = new Date.getHours()\r\n    return t\r\n} */\r\n\r\nexport default function Main() {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    /* const [Dark, setDark] = React.useState(false);\r\n    if(getT() < 19 && getT() > 8){\r\n        setDark(false)\r\n    } else {\r\n        setDark(true)\r\n    } */\r\n\r\n    return (\r\n        <div id=\"main\" className=\"App\">\r\n          <header className=\"App-main\"  >\r\n              <h1 className=\"bold bigtext nanum\">\r\n                  파크봇\r\n              </h1>\r\n              <h1 className=\"mt10 mdtext\">\r\n                  디스코드를 흥겹게, 디스코드에서 음악을.\r\n                  <br />\r\n                  디스코드를 이용중이라면 누구나 초대하고 사용할 수 있습니다.\r\n              </h1>\r\n              <Button \r\n                  variant=\"success\" \r\n                  className=\"nanum margin\"\r\n                  onClick={() => setModalShow(true)}\r\n              >초대하기</Button>\r\n  \r\n              <MyVerticallyCenteredModal\r\n                  show={modalShow}\r\n                  onHide={() => setModalShow(false)}\r\n              />\r\n              <ScrollDownIndicator onClick={detailView} />\r\n          </header>\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 777,\r\n        minWidth: 337\r\n    },\r\n    media: {\r\n        height: 307,\r\n    },\r\n})\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      borderRadius: 3,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    },\r\n    label: {\r\n      textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\nlet goto = () => {\r\n    document.getElementById(\"main\").scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"})\r\n}\r\n\r\nexport default function Main() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div id=\"intro\" className=\"App-intro\">\r\n            <Card className={classes.root} onClick={goto} style={{ width: '30vw' }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://cuteyoru.cdn3.cafe24.com/play.gif\"\r\n                        title=\"무료, 광고 없음.\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            무료, 광고 없음\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            대부분의 음악 기능은 광고 없이, 무료로 제공돼요.\r\n                            <br/>Ayana의 광고를 더 이상 듣지 마세요.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            <Card className={classes.root} onClick={goto} style={{ marginTop: '30px', width: '30vw' }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://cuteyoru.cdn3.cafe24.com/help.jpg\"\r\n                        title=\"많은 기능들\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            많은 기능들\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            프레드봇에서는 유료 버전만 지원하는 볼륨 설정,\r\n                            <br />왠만한 봇에서는 지원하지 않는 이퀄라이저까지 모두 지원해요.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            <Card className={classes.root} onClick={goto} style={{ marginTop: '30px', width: '30vw' }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://cuteyoru.cdn3.cafe24.com/support.png\"\r\n                        title=\"언제나 열려있는 문의\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            언제나 열려있는 문의 / 건의\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            궁금한점이 있을 경우 힘들게 영어로 문의하지 마세요.\r\n                            <br />한국어로 문의하시면 한국인이 직접 답장해드려요.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            <Card className={classes.root} onClick={goto} style={{ marginTop: '30px', width: '30vw' }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://cuteyoru.cdn3.cafe24.com/allin.png\"\r\n                        title=\"중독성 있는 도박\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            중독성 있는 도박\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            파크봇의 포인트를 이용해 올인 등의 도박을 즐기실 수 있습니다\r\n                            <br />이렇게 모은 포인트를 이용해 무료로 프리미엄을 구매하실수도 있어요.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            <Card className={classes.root} onClick={goto} style={{ marginTop: '30px', width: '30vw' }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://cuteyoru.cdn3.cafe24.com/season.png\"\r\n                        title=\"시즌별 이벤트\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            시즌별 이벤트\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            크리스마스에는 포인트를 조금 더,\r\n                            <br />여름에는 홈페이지를 여름 느낌나게,\r\n                            <br />계절에 따라 달라지는 봇과 홈페이지를 통해 계절을 즐겨보세요.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            <Card className={classes.root} onClick={goto} style={{ marginTop: '30px', width: '30vw' }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://cuteyoru.cdn3.cafe24.com/hangang.png\"\r\n                        title=\"음악 뿐만 아니라\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            음악 뿐만 아니라...\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            한강, 날씨 등등 생활에 필요한 기능들을 이용하실 수 있어요.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            <Card className={classes.root} onClick={goto} style={{ marginTop: '30px', width: '30vw' }}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://cuteyoru.cdn3.cafe24.com/sla.png\"\r\n                        title=\"SLA\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            디스코드 봇들중 거의 유일한 SLA\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            SLA를 통해 장애가 발생할 경우 적절한 보상을 지급해요.\r\n                            <br />정확한 기준이 없어서 봇 개발자랑 다투지 마세요.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            <StyledButton style={{ marginTop: '50px' }} onClick={goto}>\r\n                남들보다 더 빨리 초대하세요.\r\n            </StyledButton>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Card, Button } from 'react-bootstrap'\r\n\r\nlet goto = () => {\r\n    document.getElementById(\"main\").scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"})\r\n}\r\n\r\nclass Introducing extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Rendered: false,\r\n        }\r\n    }\r\n  \r\n    componentDidMount() {\r\n        this.renderAll()\r\n    }\r\n  \r\n    renderAll = async() => {\r\n        // let guildId = window.location.href.replace(/[^0-9]/g,'').replace(3000, \"\")\r\n        try {\r\n            let res = await fetch(`https://api.parkbot.ml/api`).then(r => r.json())\r\n            console.log(res)\r\n            this.setState({\r\n                status: res.status,\r\n                guilds: res.guilds,\r\n                users: res.users\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }   \r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div id=\"info\" className=\"App-info\">\r\n                <p style={{ fontSize: '50px', color: 'white' }}><span role=\"img\" aria-label=\"tree\">🎄</span> Merry Christmas!</p>\r\n                <Card style={{ width: '18rem', marginTop: '17px' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>❤ 현재 상태</Card.Title>\r\n                        <Card.Text>\r\n                            {this.state.status ? this.state.status : \"로딩중\"}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card style={{ width: '18rem', marginTop: '17px' }}>\r\n                    <Card.Body>\r\n                        {/* eslint-disable-next-line jsx-a11y/accessible-emoji*/}\r\n                        <Card.Title><span role=\"img\">🌌</span> 서버 수</Card.Title>\r\n                        <Card.Text>\r\n                            {this.state.guilds ? this.state.guilds : \"로딩중\"}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card style={{ width: '18rem', marginTop: '17px' }}>\r\n                    <Card.Body>\r\n                        {/* eslint-disable-next-line jsx-a11y/accessible-emoji*/}\r\n                        <Card.Title><span role=\"img\">👨🏻‍💻</span> 유저 수</Card.Title>\r\n                        <Card.Text>\r\n                            {this.state.users ? this.state.users : \"로딩중\"}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card style={{ width: '18rem', marginTop: '17px' }}>\r\n                    <Card.Img variant=\"top\"  />\r\n                    <Card.Body>\r\n                        <Card.Title>같이 즐길 준비 되셨나요?</Card.Title>\r\n                        <Card.Text>\r\n                            아래 버튼을 눌러 초대해보세요!\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\" onClick={goto}>초대하기</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Introducing);","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport MarkdownView from 'react-showdown'\r\n\r\nclass Docs extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Rendered: false,\r\n        }\r\n    }\r\n  \r\n    componentDidMount() {\r\n        this.renderAll()\r\n    }\r\n  \r\n    renderAll = async() => {\r\n        // let guildId = window.location.href.replace(/[^0-9]/g,'').replace(3000, \"\")\r\n        try {\r\n            let res = await fetch(`https://api.parkbot.ml/docs/${this.props.match.params.name}`).then(r => r.json())\r\n            console.log(res)\r\n            this.setState({\r\n                docs: res.docs\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }   \r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"App-docs\">\r\n                <Modal.Dialog style={{ minWidth: '70vw' }}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>{this.props.match.params.name}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <MarkdownView\r\n                            markdown={this.state.docs}\r\n                            options={{ tables: true, emoji: true }}\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => window.location.href=\"/\"}>파크봇 초대하기</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Docs);","import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nconst FooterPage = () => {\r\nreturn (\r\n    <MDBFooter className=\"font-small\">\r\n      <MDBContainer fluid className=\"text-center footer\">\r\n        <MDBRow>\r\n            <MDBCol md=\"6\">\r\n                <br />\r\n                <h5 className=\"title\">파크봇</h5>\r\n                <p>\r\n                    디스코드를 흥겹게, <br />\r\n                    디스코드에서 음악을.\r\n                </p>\r\n            </MDBCol>\r\n            <MDBCol md=\"6\">\r\n                <br />\r\n                <h5 className=\"title\">연락하기</h5>\r\n                <a href=\"https://discord.gg/jE33mfD\">지원 서버 참가하기</a><br />\r\n                <a href=\"mailto:support@parkbot.ml\">이메일</a>\r\n            </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n        <div className=\"footer-copyright text-center py-3\">\r\n            <MDBContainer fluid>\r\n                &copy; {new Date().getFullYear()} 파크봇, 모든 권리 보유.<br /><p style={{ fontSize: '10px' }}>이미지: Pixabay</p>\r\n            </MDBContainer>\r\n        </div>\r\n    </MDBFooter>\r\n);\r\n}\r\n\r\nexport default FooterPage;","import {\r\n    Navbar,\r\n    Nav,\r\n    NavDropdown,\r\n    Form,\r\n    FormControl,\r\n    Button\r\n} from 'react-bootstrap' \r\nimport React from \"react\";\r\n\r\nvar search = () => {\r\n    window.location.href = `https://www.google.com/search?q=${document.getElementById(\"searchinput\").value}+site%3Ahttps%3A%2F%2Fparkbot.ml`\r\n}\r\n\r\nexport default function App() {\r\n    return (\r\n        <nav>\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">파크봇</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/#main\">Invite</Nav.Link>\r\n                    <NavDropdown title=\"더보기\" id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"/tos\">Terms of Service</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/privacy\">Privacy</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"/docs/sla\">SLA</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n                <Form inline>\r\n                    <FormControl type=\"text\" id=\"searchinput\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                    <Button variant=\"outline-success\" onClick={search}>Search</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\nimport './App.css'\nimport Privacy from './Components/Privacy.jsx'\nimport Tos from './Components/Tos.jsx'\nimport Main from './Components/Main.jsx'\nimport Introducing from './Components/Introducing.jsx'\nimport Information from './Components/Information.jsx'\nimport Docs from './Components/Docs.jsx'\nimport Footer from './Components/Footer.jsx'\n// import Black from './Components/Black.jsx'\nimport Navbar from './Components/Navbar.jsx'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction NotFound() {\n  return (\n    <div className=\"notfound\">\n      <p>404</p>\n      <p className=\"mdtext\">찾으시려는 페이지가 존재하지 않아요.</p>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/docs/:name\">\n          <Docs />\n        </Route>\n        <Route path=\"/privacy\">\n          <Privacy />\n        </Route>\n        <Route path=\"/Tos\">\n          <Tos />\n        </Route>\n        <Route exact path=\"/\">\n          {/*<Black />*/}\n          <Main />\n          <Introducing />\n          <Information />\n        </Route>\n        <Route component={NotFound}></Route>\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}